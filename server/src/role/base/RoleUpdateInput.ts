/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { IsString, IsOptional, ValidateNested } from "class-validator";
import { PermissionUpdateManyWithoutRolesInput } from "./PermissionUpdateManyWithoutRolesInput";
import { Type } from "class-transformer";
import { SchoolDistrictUpdateManyWithoutRolesInput } from "./SchoolDistrictUpdateManyWithoutRolesInput";
import { SchoolUpdateManyWithoutRolesInput } from "./SchoolUpdateManyWithoutRolesInput";
import { StafUpdateManyWithoutRolesInput } from "./StafUpdateManyWithoutRolesInput";

@InputType()
class RoleUpdateInput {
  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  name?: string | null;

  @ApiProperty({
    required: false,
    type: () => PermissionUpdateManyWithoutRolesInput,
  })
  @ValidateNested()
  @Type(() => PermissionUpdateManyWithoutRolesInput)
  @IsOptional()
  @Field(() => PermissionUpdateManyWithoutRolesInput, {
    nullable: true,
  })
  permissions?: PermissionUpdateManyWithoutRolesInput;

  @ApiProperty({
    required: false,
    type: () => SchoolDistrictUpdateManyWithoutRolesInput,
  })
  @ValidateNested()
  @Type(() => SchoolDistrictUpdateManyWithoutRolesInput)
  @IsOptional()
  @Field(() => SchoolDistrictUpdateManyWithoutRolesInput, {
    nullable: true,
  })
  schoolDistricts?: SchoolDistrictUpdateManyWithoutRolesInput;

  @ApiProperty({
    required: false,
    type: () => SchoolUpdateManyWithoutRolesInput,
  })
  @ValidateNested()
  @Type(() => SchoolUpdateManyWithoutRolesInput)
  @IsOptional()
  @Field(() => SchoolUpdateManyWithoutRolesInput, {
    nullable: true,
  })
  schools?: SchoolUpdateManyWithoutRolesInput;

  @ApiProperty({
    required: false,
    type: () => StafUpdateManyWithoutRolesInput,
  })
  @ValidateNested()
  @Type(() => StafUpdateManyWithoutRolesInput)
  @IsOptional()
  @Field(() => StafUpdateManyWithoutRolesInput, {
    nullable: true,
  })
  stafs?: StafUpdateManyWithoutRolesInput;
}

export { RoleUpdateInput };
