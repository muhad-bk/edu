/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { EnumChartVistChartType } from "./EnumChartVistChartType";
import {
  IsEnum,
  IsString,
  IsOptional,
  ValidateNested,
  IsDate,
} from "class-validator";
import { MedicalRecordCreateNestedManyWithoutChartVistsInput } from "./MedicalRecordCreateNestedManyWithoutChartVistsInput";
import { Type } from "class-transformer";
import { MedicalRecord } from "../../medicalRecord/base/MedicalRecord";
import { SchoolWhereUniqueInput } from "../../school/base/SchoolWhereUniqueInput";
import { StafWhereUniqueInput } from "../../staf/base/StafWhereUniqueInput";
import { StudentWhereUniqueInput } from "../../student/base/StudentWhereUniqueInput";

@InputType()
class ChartVistCreateInput {
  @ApiProperty({
    required: true,
    enum: EnumChartVistChartType,
  })
  @IsEnum(EnumChartVistChartType)
  @Field(() => EnumChartVistChartType)
  chartType!: "Type_1" | "Type_2";

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  endTime?: string | null;

  @ApiProperty({
    required: false,
    type: () => MedicalRecordCreateNestedManyWithoutChartVistsInput,
  })
  @ValidateNested()
  @Type(() => MedicalRecordCreateNestedManyWithoutChartVistsInput)
  @IsOptional()
  @Field(() => MedicalRecordCreateNestedManyWithoutChartVistsInput, {
    nullable: true,
  })
  MedicalRecord?: MedicalRecordCreateNestedManyWithoutChartVistsInput;

  @ApiProperty({
    required: false,
    type: () => SchoolWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => SchoolWhereUniqueInput)
  @IsOptional()
  @Field(() => SchoolWhereUniqueInput, {
    nullable: true,
  })
  school?: SchoolWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: () => StafWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => StafWhereUniqueInput)
  @IsOptional()
  @Field(() => StafWhereUniqueInput, {
    nullable: true,
  })
  staf?: StafWhereUniqueInput | null;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  startTime?: Date | null;

  @ApiProperty({
    required: false,
    type: () => StudentWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => StudentWhereUniqueInput)
  @IsOptional()
  @Field(() => StudentWhereUniqueInput, {
    nullable: true,
  })
  student?: StudentWhereUniqueInput | null;
}

export { ChartVistCreateInput };
