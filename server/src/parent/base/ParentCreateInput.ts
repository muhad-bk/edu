/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { ApprovalCreateNestedManyWithoutParentsInput } from "./ApprovalCreateNestedManyWithoutParentsInput";
import { ValidateNested, IsOptional, IsString } from "class-validator";
import { Type } from "class-transformer";
import { SchoolCreateNestedManyWithoutParentsInput } from "./SchoolCreateNestedManyWithoutParentsInput";
import { StudentCreateNestedManyWithoutParentsInput } from "./StudentCreateNestedManyWithoutParentsInput";
import { UserWhereUniqueInput } from "../../user/base/UserWhereUniqueInput";

@InputType()
class ParentCreateInput {
  @ApiProperty({
    required: false,
    type: () => ApprovalCreateNestedManyWithoutParentsInput,
  })
  @ValidateNested()
  @Type(() => ApprovalCreateNestedManyWithoutParentsInput)
  @IsOptional()
  @Field(() => ApprovalCreateNestedManyWithoutParentsInput, {
    nullable: true,
  })
  approvals?: ApprovalCreateNestedManyWithoutParentsInput;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  name!: string;

  @ApiProperty({
    required: false,
    type: () => SchoolCreateNestedManyWithoutParentsInput,
  })
  @ValidateNested()
  @Type(() => SchoolCreateNestedManyWithoutParentsInput)
  @IsOptional()
  @Field(() => SchoolCreateNestedManyWithoutParentsInput, {
    nullable: true,
  })
  schools?: SchoolCreateNestedManyWithoutParentsInput;

  @ApiProperty({
    required: false,
    type: () => StudentCreateNestedManyWithoutParentsInput,
  })
  @ValidateNested()
  @Type(() => StudentCreateNestedManyWithoutParentsInput)
  @IsOptional()
  @Field(() => StudentCreateNestedManyWithoutParentsInput, {
    nullable: true,
  })
  students?: StudentCreateNestedManyWithoutParentsInput;

  @ApiProperty({
    required: false,
    type: () => UserWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => UserWhereUniqueInput)
  @IsOptional()
  @Field(() => UserWhereUniqueInput, {
    nullable: true,
  })
  user?: UserWhereUniqueInput | null;
}

export { ParentCreateInput };
