/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { FloatFilter } from "../../util/FloatFilter";
import { Type } from "class-transformer";
import { IsOptional, ValidateNested, IsEnum } from "class-validator";
import { ConfigurableModuleListRelationFilter } from "../../configurableModule/base/ConfigurableModuleListRelationFilter";
import { StringFilter } from "../../util/StringFilter";
import { BooleanFilter } from "../../util/BooleanFilter";
import { EnumSubscriptionPeriod } from "./EnumSubscriptionPeriod";
import { SchoolListRelationFilter } from "../../school/base/SchoolListRelationFilter";
import { SchoolWhereUniqueInput } from "../../school/base/SchoolWhereUniqueInput";
import { SubscriptionPlanListRelationFilter } from "../../subscriptionPlan/base/SubscriptionPlanListRelationFilter";

@InputType()
class SubscriptionWhereInput {
  @ApiProperty({
    required: false,
    type: FloatFilter,
  })
  @Type(() => FloatFilter)
  @IsOptional()
  @Field(() => FloatFilter, {
    nullable: true,
  })
  amount?: FloatFilter;

  @ApiProperty({
    required: false,
    type: () => ConfigurableModuleListRelationFilter,
  })
  @ValidateNested()
  @Type(() => ConfigurableModuleListRelationFilter)
  @IsOptional()
  @Field(() => ConfigurableModuleListRelationFilter, {
    nullable: true,
  })
  configurableModules?: ConfigurableModuleListRelationFilter;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  id?: StringFilter;

  @ApiProperty({
    required: false,
    type: BooleanFilter,
  })
  @Type(() => BooleanFilter)
  @IsOptional()
  @Field(() => BooleanFilter, {
    nullable: true,
  })
  isStanderd?: BooleanFilter;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  name?: StringFilter;

  @ApiProperty({
    required: false,
    enum: EnumSubscriptionPeriod,
  })
  @IsEnum(EnumSubscriptionPeriod)
  @IsOptional()
  @Field(() => EnumSubscriptionPeriod, {
    nullable: true,
  })
  period?: "Monthly" | "Yearly";

  @ApiProperty({
    required: false,
    type: () => SchoolListRelationFilter,
  })
  @ValidateNested()
  @Type(() => SchoolListRelationFilter)
  @IsOptional()
  @Field(() => SchoolListRelationFilter, {
    nullable: true,
  })
  schools?: SchoolListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => SchoolWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => SchoolWhereUniqueInput)
  @IsOptional()
  @Field(() => SchoolWhereUniqueInput, {
    nullable: true,
  })
  schoolSubscriptionHistory?: SchoolWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: () => SubscriptionPlanListRelationFilter,
  })
  @ValidateNested()
  @Type(() => SubscriptionPlanListRelationFilter)
  @IsOptional()
  @Field(() => SubscriptionPlanListRelationFilter, {
    nullable: true,
  })
  subscriptionPlans?: SubscriptionPlanListRelationFilter;
}

export { SubscriptionWhereInput };
