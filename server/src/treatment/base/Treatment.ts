/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { ObjectType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { Approval } from "../../approval/base/Approval";
import {
  ValidateNested,
  IsOptional,
  IsEnum,
  IsDate,
  IsJSON,
  IsString,
} from "class-validator";
import { Type } from "class-transformer";
import { EnumTreatmentCategory } from "./EnumTreatmentCategory";
import { ChartVist } from "../../chartVist/base/ChartVist";
import { GraphQLJSON } from "graphql-type-json";
import { JsonValue } from "type-fest";
import { Student } from "../../student/base/Student";

@ObjectType()
class Treatment {
  @ApiProperty({
    required: false,
    type: () => Approval,
  })
  @ValidateNested()
  @Type(() => Approval)
  @IsOptional()
  approval?: Approval | null;

  @ApiProperty({
    required: false,
    enum: EnumTreatmentCategory,
  })
  @IsEnum(EnumTreatmentCategory)
  @IsOptional()
  @Field(() => EnumTreatmentCategory, {
    nullable: true,
  })
  category?:
    | "Immunisation"
    | "Treatment"
    | "Medication"
    | "MandatoryScreening"
    | null;

  @ApiProperty({
    required: false,
    type: () => ChartVist,
  })
  @ValidateNested()
  @Type(() => ChartVist)
  @IsOptional()
  chartVist?: ChartVist | null;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  createdAt!: Date;

  @ApiProperty({
    required: true,
  })
  @IsJSON()
  @Field(() => GraphQLJSON)
  generalDetails!: JsonValue;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  id!: string;

  @ApiProperty({
    required: false,
  })
  @IsJSON()
  @IsOptional()
  @Field(() => GraphQLJSON, {
    nullable: true,
  })
  medicationDetails!: JsonValue;

  @ApiProperty({
    required: false,
    type: () => Student,
  })
  @ValidateNested()
  @Type(() => Student)
  @IsOptional()
  student?: Student | null;

  @ApiProperty({
    required: false,
  })
  @IsJSON()
  @IsOptional()
  @Field(() => GraphQLJSON, {
    nullable: true,
  })
  timingDetails!: JsonValue;

  @ApiProperty({
    required: true,
  })
  @IsJSON()
  @Field(() => GraphQLJSON)
  treatmentDetails!: JsonValue;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  updatedAt!: Date;
}

export { Treatment };
