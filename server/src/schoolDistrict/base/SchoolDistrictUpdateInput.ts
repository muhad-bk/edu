/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { IsString, IsOptional, ValidateNested } from "class-validator";
import { RoleUpdateManyWithoutSchoolDistrictsInput } from "./RoleUpdateManyWithoutSchoolDistrictsInput";
import { Type } from "class-transformer";
import { SchoolUpdateManyWithoutSchoolDistrictsInput } from "./SchoolUpdateManyWithoutSchoolDistrictsInput";
import { StafUpdateManyWithoutSchoolDistrictsInput } from "./StafUpdateManyWithoutSchoolDistrictsInput";
import { SubscriptionWhereUniqueInput } from "../../subscription/base/SubscriptionWhereUniqueInput";

@InputType()
class SchoolDistrictUpdateInput {
  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  address?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  name?: string;

  @ApiProperty({
    required: false,
    type: () => RoleUpdateManyWithoutSchoolDistrictsInput,
  })
  @ValidateNested()
  @Type(() => RoleUpdateManyWithoutSchoolDistrictsInput)
  @IsOptional()
  @Field(() => RoleUpdateManyWithoutSchoolDistrictsInput, {
    nullable: true,
  })
  roles?: RoleUpdateManyWithoutSchoolDistrictsInput;

  @ApiProperty({
    required: false,
    type: () => SchoolUpdateManyWithoutSchoolDistrictsInput,
  })
  @ValidateNested()
  @Type(() => SchoolUpdateManyWithoutSchoolDistrictsInput)
  @IsOptional()
  @Field(() => SchoolUpdateManyWithoutSchoolDistrictsInput, {
    nullable: true,
  })
  schools?: SchoolUpdateManyWithoutSchoolDistrictsInput;

  @ApiProperty({
    required: false,
    type: () => StafUpdateManyWithoutSchoolDistrictsInput,
  })
  @ValidateNested()
  @Type(() => StafUpdateManyWithoutSchoolDistrictsInput)
  @IsOptional()
  @Field(() => StafUpdateManyWithoutSchoolDistrictsInput, {
    nullable: true,
  })
  stafs?: StafUpdateManyWithoutSchoolDistrictsInput;

  @ApiProperty({
    required: false,
    type: () => SubscriptionWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => SubscriptionWhereUniqueInput)
  @IsOptional()
  @Field(() => SubscriptionWhereUniqueInput, {
    nullable: true,
  })
  subscription?: SubscriptionWhereUniqueInput | null;
}

export { SchoolDistrictUpdateInput };
