/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { StringNullableFilter } from "../../util/StringNullableFilter";
import { Type } from "class-transformer";
import { IsOptional, ValidateNested } from "class-validator";
import { StringFilter } from "../../util/StringFilter";
import { RoleListRelationFilter } from "../../role/base/RoleListRelationFilter";
import { SchoolListRelationFilter } from "../../school/base/SchoolListRelationFilter";
import { StafListRelationFilter } from "../../staf/base/StafListRelationFilter";
import { SubscriptionWhereUniqueInput } from "../../subscription/base/SubscriptionWhereUniqueInput";

@InputType()
class SchoolDistrictWhereInput {
  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  address?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  id?: StringFilter;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  name?: StringFilter;

  @ApiProperty({
    required: false,
    type: () => RoleListRelationFilter,
  })
  @ValidateNested()
  @Type(() => RoleListRelationFilter)
  @IsOptional()
  @Field(() => RoleListRelationFilter, {
    nullable: true,
  })
  roles?: RoleListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => SchoolListRelationFilter,
  })
  @ValidateNested()
  @Type(() => SchoolListRelationFilter)
  @IsOptional()
  @Field(() => SchoolListRelationFilter, {
    nullable: true,
  })
  schools?: SchoolListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => StafListRelationFilter,
  })
  @ValidateNested()
  @Type(() => StafListRelationFilter)
  @IsOptional()
  @Field(() => StafListRelationFilter, {
    nullable: true,
  })
  stafs?: StafListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => SubscriptionWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => SubscriptionWhereUniqueInput)
  @IsOptional()
  @Field(() => SubscriptionWhereUniqueInput, {
    nullable: true,
  })
  subscription?: SubscriptionWhereUniqueInput;
}

export { SchoolDistrictWhereInput };
