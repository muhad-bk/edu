/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsString,
  IsOptional,
  IsEnum,
  ValidateNested,
  IsJSON,
} from "class-validator";
import { EnumUserLanguage } from "./EnumUserLanguage";
import { ParentCreateNestedManyWithoutUsersInput } from "./ParentCreateNestedManyWithoutUsersInput";
import { Type } from "class-transformer";
import { GraphQLJSON } from "graphql-type-json";
import { InputJsonValue } from "../../types";
import { StafCreateNestedManyWithoutUsersInput } from "./StafCreateNestedManyWithoutUsersInput";
import { StudentCreateNestedManyWithoutUsersInput } from "./StudentCreateNestedManyWithoutUsersInput";

@InputType()
class UserCreateInput {
  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  email?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  fullName?: string | null;

  @ApiProperty({
    required: false,
    enum: EnumUserLanguage,
  })
  @IsEnum(EnumUserLanguage)
  @IsOptional()
  @Field(() => EnumUserLanguage, {
    nullable: true,
  })
  language?: "English" | null;

  @ApiProperty({
    required: false,
    type: () => ParentCreateNestedManyWithoutUsersInput,
  })
  @ValidateNested()
  @Type(() => ParentCreateNestedManyWithoutUsersInput)
  @IsOptional()
  @Field(() => ParentCreateNestedManyWithoutUsersInput, {
    nullable: true,
  })
  parents?: ParentCreateNestedManyWithoutUsersInput;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  password!: string;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  profilePicUrl?: string | null;

  @ApiProperty({
    required: true,
  })
  @IsJSON()
  @Field(() => GraphQLJSON)
  roles!: InputJsonValue;

  @ApiProperty({
    required: false,
    type: () => StafCreateNestedManyWithoutUsersInput,
  })
  @ValidateNested()
  @Type(() => StafCreateNestedManyWithoutUsersInput)
  @IsOptional()
  @Field(() => StafCreateNestedManyWithoutUsersInput, {
    nullable: true,
  })
  stafs?: StafCreateNestedManyWithoutUsersInput;

  @ApiProperty({
    required: false,
    type: () => StudentCreateNestedManyWithoutUsersInput,
  })
  @ValidateNested()
  @Type(() => StudentCreateNestedManyWithoutUsersInput)
  @IsOptional()
  @Field(() => StudentCreateNestedManyWithoutUsersInput, {
    nullable: true,
  })
  students?: StudentCreateNestedManyWithoutUsersInput;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  username!: string;
}

export { UserCreateInput };
