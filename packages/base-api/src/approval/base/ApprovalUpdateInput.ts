/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { ParentUpdateManyWithoutApprovalsInput } from "./ParentUpdateManyWithoutApprovalsInput";
import { ValidateNested, IsOptional, IsString } from "class-validator";
import { Type } from "class-transformer";
import { MedicalRecordWhereUniqueInput } from "../../medicalRecord/base/MedicalRecordWhereUniqueInput";
import { StudentWhereUniqueInput } from "../../student/base/StudentWhereUniqueInput";

@InputType()
class ApprovalUpdateInput {
  @ApiProperty({
    required: false,
    type: () => ParentUpdateManyWithoutApprovalsInput,
  })
  @ValidateNested()
  @Type(() => ParentUpdateManyWithoutApprovalsInput)
  @IsOptional()
  @Field(() => ParentUpdateManyWithoutApprovalsInput, {
    nullable: true,
  })
  approvedBy?: ParentUpdateManyWithoutApprovalsInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  authorisationLetter?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  description?: string | null;

  @ApiProperty({
    required: false,
    type: () => MedicalRecordWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => MedicalRecordWhereUniqueInput)
  @IsOptional()
  @Field(() => MedicalRecordWhereUniqueInput, {
    nullable: true,
  })
  record?: MedicalRecordWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: () => StudentWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => StudentWhereUniqueInput)
  @IsOptional()
  @Field(() => StudentWhereUniqueInput, {
    nullable: true,
  })
  student?: StudentWhereUniqueInput | null;
}

export { ApprovalUpdateInput };
